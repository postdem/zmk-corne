/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <39 40 41 30 18 6 8 9 10 11 19 7 31 32 20 21 33 34 22 23 35>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp RBKT   &kp Q        &kp W        &kp E         &kp R         &kp T        &kp Y      &kp U         &kp I         &kp O        &kp P           &kp LBKT
&kp GRAVE  &hml LGUI A  &hml LALT S  &hml LCTRL D  &hml LSHFT F  &kp G        &kp H      &hmr RSHFT J  &hmr LCTRL K  &hmr LALT L  &hmr RGUI SEMI  &kp SQT
&kp BSLH   &kp Z        &kp X        &kp C         &kp V         &kp B        &kp N      &kp M         &kp COMMA     &kp DOT      &kp FSLH        &none
                                     &kp TAB       &lt 1 SPACE   &lt 2 RET    &lt 4 ESC  &lt 3 BSPC    &kp DEL
            >;
        };

        NUM_L {
            bindings = <
&trans        &kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS     &trans  &trans           &trans     &trans    &trans    &trans
&kp KP_EQUAL  &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS    &trans  &kp RIGHT_SHIFT  &kp RCTRL  &kp LALT  &kp RGUI  &trans
&kp KP_NUM    &kp KP_DIVIDE    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT      &trans  &trans           &trans     &trans    &trans    &trans
                                                &trans           &trans           &trans          &trans  &trans           &trans
            >;
        };

        SYM_L {
            bindings = <
&trans  &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)  &kp LS(RPAR)     &trans  &kp RSHFT  &kp RCTRL  &kp LALT  &kp RGUI  &trans
&trans  &trans         &trans        &trans         &trans        &trans           &trans  &trans     &trans     &trans    &trans    &trans
                                     &trans         &trans        &trans           &trans  &trans     &trans
            >;
        };

        NAV_L {
            bindings = <
&trans  &trans      &trans     &trans      &trans       &trans        &kp PG_UP      &kp HOME  &kp UP_ARROW  &kp END    &trans    &trans
&trans  &kp LGUI    &kp LALT   &kp LCTRL   &kp LSHFT    &trans        &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &kp BSPC  &kp DELETE
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &trans         &trans    &trans        &trans     &trans    &trans
                               &trans      &trans       &trans        &trans         &trans    &trans
            >;
        };

        MOU_L {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &msc SCRL_UP    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans          &trans          &trans          &trans           &trans  &trans
                            &trans     &trans     &trans    &trans          &trans          &trans
            >;
        };

        SET_L {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings_l {
            if-layers = <1 3>;
            then-layer = <5>;
        };
    };
};
