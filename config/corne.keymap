/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    quick_tap_ms = <220>;
};

&mt {
    quick_tap_ms = <220>;
};

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <39 40 41 30 18 6 8 9 10 11 19 7 31 32 20 21 33 34 22 23 35>;
            quick-tap-ms = <250>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&mt LGUI RBKT    &kp Q  &kp W  &kp E    &kp R        &kp T        &kp Y      &kp U       &kp I      &kp O    &kp P     &mt RGUI LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D    &kp F        &kp G        &kp H      &kp J       &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT BSLH    &kp Z  &kp X  &kp C    &kp V        &kp B        &kp N      &kp M       &kp COMMA  &kp DOT  &kp FSLH  &mt RALT MINUS
                               &kp TAB  &lt 1 SPACE  &lt 2 RET    &lt 4 ESC  &lt 3 BSPC  &kp DEL
            >;
        };

        NUM_L {
            bindings = <
&mt LGUI KP_NUMLOCK  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp PLUS        &kp PG_UP      &kp HOME  &kp UP_ARROW  &kp END    &trans    &trans
&mt LCTRL KP_PLUS    &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_MINUS    &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &kp BSPC  &kp DELETE
&mt LALT EQUAL       &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &trans         &trans    &trans        &trans     &trans    &trans
                                                 &trans     &trans     &trans          &trans         &trans    &trans
            >;
        };

        SYM_L {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4    &kp F5      &kp F6         &kp F7     &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp UNDER
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3    &kp N4      &kp N5         &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
                                  &trans    &trans      &trans         &trans     &trans    &trans
            >;
        };

        NAV_L {
            bindings = <
&trans  &trans      &trans     &trans      &trans       &trans        &kp PG_UP      &kp HOME  &kp UP_ARROW  &kp END    &trans    &trans
&trans  &kp LGUI    &kp LALT   &kp LCTRL   &kp LSHFT    &trans        &kp PAGE_DOWN  &kp LEFT  &kp DOWN      &kp RIGHT  &kp BSPC  &kp DELETE
&trans  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REDO    &trans         &trans    &trans        &trans     &trans    &trans
                               &trans      &trans       &trans        &trans         &trans    &trans
            >;
        };

        MOU_L {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &msc SCRL_UP    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &msc SCRL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans          &trans          &trans          &trans           &trans  &trans
                            &trans     &trans     &trans    &trans          &trans          &trans
            >;
        };

        SET_L {
            bindings = <
&bootloader        &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&ext_power EP_OFF  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        settings_l {
            if-layers = <1 3>;
            then-layer = <5>;
        };
    };
};
